{"version":3,"sources":["components/Paragraph.js","components/Header.js","components/TaskItem.js","components/TasksList.js","components/FilterBar.js","theme/GlobalStyles.js","components/ButtonIcon.js","components/Input.js","components/Button.js","components/AddTaskForm.js","views/App.js","index.js"],"names":["Paragraph","styled","p","HeaderWrapper","div","HeaderParagraph","Header","TaskItemWrapper","TaskInfo","InputWrapper","TaskItem","id","title","priority","done","changeTaskStatus","type","checked","onChange","TasksWrapper","TasksList","tasks","numberRows","tasksList","map","task","key","length","slice","FilterWrapper","Arrow","i","SelectRows","select","FilterBar","setNumberRows","numberTasks","htmlFor","name","value","e","target","className","GlobalStyles","createGlobalStyle","StyledButton","button","PlusIcon","ButtonIcon","taskFormVisibleToggle","onClick","Input","input","Button","FormWrapper","form","isVisible","h1","SelectPriority","AddButton","AddTaskForm","setIsAddTaskFormVisible","setInputText","inputText","setTasks","setPriority","onSubmit","preventDefault","newTask","placeholder","Wrapper","App","useState","isAddTaskFormVisible","useEffect","data","localStorage","getItem","JSON","parse","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e19071c3.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Paragraph = styled.p`\r\n  font-size: 17px;\r\n`;\r\n\r\nexport default Paragraph;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Paragraph from \"components/Paragraph\";\r\n\r\nconst HeaderWrapper = styled.div`\r\n  background-color: #494430;\r\n  flex-basis: 9vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst HeaderParagraph = styled(Paragraph)`\r\n  color: white;\r\n  flex-basis: 30%;\r\n  flex-grow: 1;\r\n  text-align: center;\r\n  font-size: 17px;\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <HeaderWrapper>\r\n      <HeaderParagraph>Task name</HeaderParagraph>\r\n      <HeaderParagraph>Priority</HeaderParagraph>\r\n      <HeaderParagraph>Done</HeaderParagraph>\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Paragraph from \"./Paragraph\";\r\n\r\nconst TaskItemWrapper = styled.div`\r\n  height: 50px;\r\n  border-bottom: 2px solid #ddd;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst TaskInfo = styled(Paragraph)`\r\n  flex-basis: 25.1%;\r\n  flex-grow: 1;\r\n  text-align: center;\r\n  font-size: 13px;\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  flex-basis: 25.1%;\r\n  flex-grow: 1;\r\n  text-align: center;\r\n`;\r\n\r\nconst TaskItem = ({ id, title, priority, done, changeTaskStatus }) => {\r\n  return (\r\n    <TaskItemWrapper>\r\n      <TaskInfo>{title}</TaskInfo>\r\n      <TaskInfo>{priority}</TaskInfo>\r\n      <InputWrapper>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={done}\r\n          onChange={() => changeTaskStatus(id)}\r\n        />\r\n      </InputWrapper>\r\n    </TaskItemWrapper>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TaskItem from \"components/TaskItem\";\r\n\r\nconst TasksWrapper = styled.div``;\r\n\r\nconst TasksList = ({ tasks, changeTaskStatus, numberRows }) => {\r\n  const tasksList = tasks.map(task => (\r\n    <TaskItem\r\n      key={task.id}\r\n      id={task.id}\r\n      title={task.title}\r\n      priority={task.priority}\r\n      done={task.done}\r\n      changeTaskStatus={changeTaskStatus}\r\n    />\r\n  ));\r\n\r\n  if (tasksList.length >= numberRows) {\r\n    return <TasksWrapper>{tasksList.slice(0, numberRows)}</TasksWrapper>;\r\n  } else {\r\n    return <TasksWrapper>{tasksList}</TasksWrapper>;\r\n  }\r\n};\r\n\r\nexport default TasksList;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Paragraph from \"components/Paragraph\";\r\n\r\nconst FilterWrapper = styled.div`\r\n  flex-basis: 5vh;\r\n  padding: 10px 0;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n\r\n  label {\r\n    font-size: 17px;\r\n  }\r\n`;\r\n\r\nconst Arrow = styled.i`\r\n  flex-basis: 20px;\r\n  font-size: 25px;\r\n  margin: 0 8px 0 8px;\r\n`;\r\n\r\nconst SelectRows = styled.select`\r\n  padding: 3px 5px;\r\n  font-size: 15px;\r\n  color: #333;\r\n  background-color: #eee;\r\n  border: 1px solid #ddd;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst FilterBar = ({ setNumberRows, numberRows, numberTasks }) => {\r\n  const handleNumberRows = e => {\r\n    setNumberRows(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <FilterWrapper>\r\n      <label htmlFor=\"rowsSelect\">Rows per Page:</label>\r\n      <SelectRows\r\n        name=\"rows\"\r\n        id=\"rowsSelect\"\r\n        value={numberRows}\r\n        onChange={handleNumberRows}\r\n      >\r\n        <option value={5}>5</option>\r\n        <option value={10}>10</option>\r\n        <option value={15}>15</option>\r\n      </SelectRows>\r\n      <Paragraph>\r\n        1-{numberRows} of {numberTasks}\r\n      </Paragraph>\r\n      <Arrow className=\"fas fa-chevron-left\" />\r\n      <Arrow className=\"fas fa-chevron-right\" />\r\n    </FilterWrapper>\r\n  );\r\n};\r\n\r\nexport default FilterBar;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n* {\r\n    box-sizing: border-box;\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\nhtml {\r\n    font-family: 'Montserrat', sans-serif;\r\n}\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledButton = styled.button`\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 50%;\r\n  z-index: 9000;\r\n  position: fixed;\r\n  bottom: 35px;\r\n  right: 25px;\r\n`;\r\n\r\nconst PlusIcon = styled.i`\r\n  font-size: 30px;\r\n`;\r\n\r\nconst ButtonIcon = ({ taskFormVisibleToggle }) => {\r\n  return (\r\n    <StyledButton onClick={taskFormVisibleToggle}>\r\n      <PlusIcon className=\"fas fa-plus\"></PlusIcon>\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default ButtonIcon;\r\n","import styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n  width: 200px;\r\n  height: 30px;\r\n  font-size: 20px;\r\n  border: 2px solid #494430;\r\n`;\r\n\r\nexport default Input;\r\n","import styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  width: 100px;\r\n  height: 50px;\r\n`;\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Input from \"components/Input\";\r\nimport Button from \"components/Button\";\r\n\r\nconst FormWrapper = styled.form`\r\n  position: fixed;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  right: 0;\r\n  top: 0;\r\n  background-color: #fff;\r\n  z-index: 100;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  transform: translate(${({ isVisible }) => (isVisible ? \"0\" : \"100%\")});\r\n  transition: transform 0.5s ease;\r\n`;\r\n\r\nconst Header = styled.h1`\r\n  font-size: 35px;\r\n  text-align: center;\r\n  padding: 25px;\r\n`;\r\n\r\nconst SelectPriority = styled.select`\r\n  border: 2px solid #494430;\r\n  cursor: pointer;\r\n  width: 200px;\r\n  font-size: 20px;\r\n  margin: 20px;\r\n`;\r\n\r\nconst AddButton = styled(Button)`\r\n  font-size: 20px;\r\n  padding: 10px;\r\n  width: 150px;\r\n\r\n  :hover {\r\n    border: 2px solid black;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst AddTaskForm = ({\r\n  isVisible,\r\n  setIsAddTaskFormVisible,\r\n  setInputText,\r\n  inputText,\r\n  tasks,\r\n  setTasks,\r\n  setPriority,\r\n  priority,\r\n}) => {\r\n  const handleInputText = e => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const handleSubmitForm = e => {\r\n    e.preventDefault();\r\n    const newTask = {\r\n      title: inputText,\r\n      done: false,\r\n      priority: priority,\r\n    };\r\n    setTasks([...tasks, newTask]);\r\n    setInputText(\"\");\r\n    setPriority(\"Low\");\r\n    setIsAddTaskFormVisible(false);\r\n  };\r\n\r\n  const handleSelectPriority = e => {\r\n    setPriority(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormWrapper isVisible={isVisible} onSubmit={handleSubmitForm}>\r\n      <Header>Add new Note</Header>\r\n      <Input placeholder=\"Title\" onChange={handleInputText} value={inputText} />\r\n      <SelectPriority\r\n        name=\"priority\"\r\n        value={priority}\r\n        onChange={handleSelectPriority}\r\n      >\r\n        <option value=\"Low\">Low</option>\r\n        <option value=\"Medium\">Medium</option>\r\n        <option value=\"High\">High</option>\r\n      </SelectPriority>\r\n      <AddButton>Add Note</AddButton>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default AddTaskForm;\r\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"components/Header\";\nimport TasksList from \"components/TasksList\";\nimport FilterBar from \"components/FilterBar\";\nimport GlobalStyles from \"theme/GlobalStyles\";\nimport ButtonIcon from \"components/ButtonIcon\";\nimport AddTaskForm from \"components/AddTaskForm\";\n\nconst Wrapper = styled.div`\n  min-height: 100vh;\n  padding: 6px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nconst App = () => {\n  const [tasks, setTasks] = useState([\n    {\n      id: 0,\n      title: \"Task1\",\n      priority: \"Medium\",\n      done: false,\n    },\n    {\n      id: 1,\n      title: \"Task2\",\n      priority: \"Medium\",\n      done: false,\n    },\n    {\n      id: 2,\n      title: \"Task3\",\n      priority: \"High\",\n      done: false,\n    },\n    {\n      id: 3,\n      title: \"Task4\",\n      priority: \"Low\",\n      done: true,\n    },\n    {\n      id: 4,\n      title: \"Task5\",\n      priority: \"Low\",\n      done: true,\n    },\n    {\n      id: 5,\n      title: \"Task6\",\n      priority: \"Low\",\n      done: true,\n    },\n  ]);\n  const [isAddTaskFormVisible, setIsAddTaskFormVisible] = useState(false);\n  const [inputText, setInputText] = useState(\"\");\n  const [priority, setPriority] = useState(\"Low\");\n  const [numberRows, setNumberRows] = useState(5);\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"tasks\");\n    if (data) {\n      setTasks(JSON.parse(data));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  });\n\n  const handleTaskFormVisibleToggle = () => {\n    setIsAddTaskFormVisible(!isAddTaskFormVisible);\n  };\n\n  const changeTaskStatus = id => {\n    const tasksList = [...tasks];\n    tasksList[id].done = !tasks[id].done;\n    setTasks(tasksList);\n  };\n\n  return (\n    <>\n      <GlobalStyles />\n      <Wrapper>\n        <Header />\n        <TasksList\n          tasks={tasks}\n          changeTaskStatus={changeTaskStatus}\n          numberRows={numberRows}\n        />\n        <FilterBar\n          numberRows={numberRows}\n          setNumberRows={setNumberRows}\n          numberTasks={tasks.length}\n        />\n        <ButtonIcon taskFormVisibleToggle={handleTaskFormVisibleToggle} />\n      </Wrapper>\n\n      <AddTaskForm\n        isVisible={isAddTaskFormVisible}\n        setIsAddTaskFormVisible={setIsAddTaskFormVisible}\n        setInputText={setInputText}\n        inputText={inputText}\n        tasks={tasks}\n        setTasks={setTasks}\n        priority={priority}\n        setPriority={setPriority}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"views/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}