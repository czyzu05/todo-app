{"version":3,"sources":["components/Paragraph.js","components/Header.js","components/TaskItem.js","components/TasksList.js","components/FilterBar.js","theme/GlobalStyles.js","components/ButtonIcon.js","components/Input.js","components/Button.js","components/AddTaskForm.js","views/App.js","index.js"],"names":["Paragraph","styled","p","HeaderWrapper","div","HeaderParagraph","Header","TaskItemWrapper","TaskInfo","InputWrapper","TrashTooltip","i","TaskItem","id","title","priority","done","changeTaskStatus","handleDeleteTask","task","className","content","placement","delay","onClick","interactive","theme","animation","type","checked","onChange","TasksWrapper","TasksList","tasks","numberRows","endNumberRows","startNumberRows","tasksList","map","key","length","slice","FilterWrapper","Arrow","SelectRows","select","ChangePageButton","button","FilterBar","setNumberRows","numberTasks","setEndNumberRows","setStartNumberRows","displayNextPage","direction","htmlFor","name","value","e","parseInt","target","defaultProps","GlobalStyles","createGlobalStyle","StyledButton","PlusIcon","ButtonIcon","taskFormVisibleToggle","Input","input","Button","FormWrapper","form","isVisible","h1","SelectPriority","AddButton","AddTaskForm","setIsAddTaskFormVisible","setTasks","setPriority","useState","inputText","setInputText","onSubmit","preventDefault","newTask","Math","random","placeholder","Wrapper","Text","App","isAddTaskFormVisible","useEffect","data","localStorage","getItem","JSON","parse","setItem","stringify","index","findIndex","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48b30f4b.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Paragraph = styled.p`\r\n  font-size: 14px;\r\n`;\r\n\r\nexport default Paragraph;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Paragraph from \"components/Paragraph\";\r\n\r\nconst HeaderWrapper = styled.div`\r\n  background-color: #494430;\r\n  flex-basis: 9vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst HeaderParagraph = styled(Paragraph)`\r\n  color: white;\r\n  flex-basis: 30%;\r\n  flex-grow: 1;\r\n  text-align: center;\r\n  font-size: 17px;\r\n  @media (min-width: 1200px) {\r\n    font-size: 24px;\r\n  }\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <HeaderWrapper>\r\n      <HeaderParagraph>Task name</HeaderParagraph>\r\n      <HeaderParagraph>Priority</HeaderParagraph>\r\n      <HeaderParagraph>Done</HeaderParagraph>\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Tippy from \"@tippyjs/react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"tippy.js/dist/tippy.css\";\r\nimport \"tippy.js/themes/light.css\";\r\nimport \"tippy.js/animations/scale.css\";\r\nimport Paragraph from \"./Paragraph\";\r\n\r\nconst TaskItemWrapper = styled.div`\r\n  height: 50px;\r\n  border-bottom: 2px solid #ddd;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst TaskInfo = styled(Paragraph)`\r\n  flex-basis: 25.1%;\r\n  flex-grow: 1;\r\n  text-align: center;\r\n  font-size: 13px;\r\n\r\n  @media (min-width: 1200px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  flex-basis: 25.1%;\r\n  flex-grow: 1;\r\n  text-align: center;\r\n\r\n  @media (min-width: 1200px) {\r\n    input {\r\n      width: 20px;\r\n      height: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TrashTooltip = styled.i`\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst TaskItem = ({\r\n  id,\r\n  title,\r\n  priority,\r\n  done,\r\n  changeTaskStatus,\r\n  handleDeleteTask,\r\n  task,\r\n}) => {\r\n  return (\r\n    <TaskItemWrapper className=\"tooltip\">\r\n      <Tippy\r\n        content={\r\n          <Tippy\r\n            content=\"Click for remove this task\"\r\n            placement=\"right\"\r\n            delay=\"200\"\r\n          >\r\n            <button onClick={() => handleDeleteTask(task.id)}>\r\n              <TrashTooltip className=\"fas fa-trash-alt\"></TrashTooltip>\r\n            </button>\r\n          </Tippy>\r\n        }\r\n        interactive={true}\r\n        theme=\"light\"\r\n        animation=\"scale\"\r\n      >\r\n        <TaskInfo>{title}</TaskInfo>\r\n      </Tippy>\r\n      <TaskInfo>{priority}</TaskInfo>\r\n      <InputWrapper>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={done}\r\n          onChange={() => changeTaskStatus(id)}\r\n        />\r\n      </InputWrapper>\r\n    </TaskItemWrapper>\r\n  );\r\n};\r\n\r\nTaskItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  priority: PropTypes.string.isRequired,\r\n  done: PropTypes.bool.isRequired,\r\n  changeTaskStatus: PropTypes.func,\r\n  handleDeleteTask: PropTypes.func,\r\n  task: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default TaskItem;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport TaskItem from \"components/TaskItem\";\r\n\r\nconst TasksWrapper = styled.div``;\r\n\r\nconst TasksList = ({\r\n  tasks,\r\n  changeTaskStatus,\r\n  numberRows,\r\n  handleDeleteTask,\r\n  endNumberRows,\r\n  startNumberRows,\r\n}) => {\r\n  const tasksList = tasks.map(task => (\r\n    <TaskItem\r\n      key={task.id}\r\n      id={task.id}\r\n      title={task.title}\r\n      priority={task.priority}\r\n      done={task.done}\r\n      changeTaskStatus={changeTaskStatus}\r\n      handleDeleteTask={handleDeleteTask}\r\n      task={task}\r\n    />\r\n  ));\r\n\r\n  if (tasksList.length >= numberRows) {\r\n    return (\r\n      <TasksWrapper>\r\n        {tasksList.slice(startNumberRows, endNumberRows)}\r\n      </TasksWrapper>\r\n    );\r\n  } else {\r\n    return <TasksWrapper>{tasksList}</TasksWrapper>;\r\n  }\r\n};\r\n\r\nTasksList.propTypes = {\r\n  tasks: PropTypes.arrayOf(PropTypes.object),\r\n  changeTaskStatus: PropTypes.func,\r\n  numberRows: PropTypes.number,\r\n  handleDeleteTask: PropTypes.func,\r\n  endNumberRows: PropTypes.number.isRequired,\r\n  startNumberRows: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TasksList;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport Paragraph from \"components/Paragraph\";\r\n\r\nconst FilterWrapper = styled.div`\r\n  flex-basis: 5vh;\r\n  padding: 10px 0;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n\r\n  label {\r\n    font-size: 17px;\r\n  }\r\n`;\r\n\r\nconst Arrow = styled.i`\r\n  font-size: 20px;\r\n  margin: 0 5px 0 5px;\r\n`;\r\n\r\nconst SelectRows = styled.select`\r\n  padding: 3px 5px;\r\n  font-size: 15px;\r\n  color: #333;\r\n  background-color: #eee;\r\n  border: 1px solid #ddd;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst ChangePageButton = styled.button`\r\n  width: 30px;\r\n  height: 35px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  margin: 0 8px;\r\n  background-color: transparent;\r\n  border: none;\r\n\r\n  :hover {\r\n    border: 1px solid black;\r\n  }\r\n`;\r\n\r\nconst FilterBar = ({\r\n  setNumberRows,\r\n  numberRows,\r\n  numberTasks,\r\n  endNumberRows,\r\n  startNumberRows,\r\n  setEndNumberRows,\r\n  setStartNumberRows,\r\n}) => {\r\n  const handleNumberRows = e => {\r\n    setEndNumberRows(parseInt(e.target.value, 10) + startNumberRows);\r\n    setNumberRows(parseInt(e.target.value, 10));\r\n  };\r\n\r\n  const displayNextPage = direction => {\r\n    switch (direction) {\r\n      case \"right\":\r\n        if (endNumberRows >= numberTasks) {\r\n          setEndNumberRows(numberTasks + 1);\r\n        } else {\r\n          setEndNumberRows(endNumberRows + numberRows);\r\n          setStartNumberRows(startNumberRows + numberRows);\r\n        }\r\n        break;\r\n      case \"left\":\r\n        if (startNumberRows - numberRows <= 0) {\r\n          setStartNumberRows(0);\r\n          setEndNumberRows(numberRows);\r\n        } else {\r\n          setEndNumberRows(endNumberRows - numberRows);\r\n          setStartNumberRows(startNumberRows - numberRows);\r\n        }\r\n        break;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FilterWrapper>\r\n      <label htmlFor=\"rowsSelect\">Rows per Page:</label>\r\n      <SelectRows\r\n        name=\"rows\"\r\n        id=\"rowsSelect\"\r\n        value={numberRows}\r\n        onChange={handleNumberRows}\r\n      >\r\n        <option value={5}>{5}</option>\r\n        <option value={10}>{10}</option>\r\n        <option value={15}>{15}</option>\r\n      </SelectRows>\r\n      <Paragraph>\r\n        {startNumberRows + 1}-{endNumberRows} of {numberTasks}\r\n      </Paragraph>\r\n      <ChangePageButton onClick={() => displayNextPage(\"left\")}>\r\n        <Arrow className=\"fas fa-chevron-left\" />\r\n      </ChangePageButton>\r\n      <ChangePageButton onClick={() => displayNextPage(\"right\")}>\r\n        <Arrow className=\"fas fa-chevron-right\" />\r\n      </ChangePageButton>\r\n    </FilterWrapper>\r\n  );\r\n};\r\n\r\nFilterBar.propTypes = {\r\n  numberRows: PropTypes.number.isRequired,\r\n  numberTasks: PropTypes.number,\r\n  endNumberRows: PropTypes.number.isRequired,\r\n  startNumberRows: PropTypes.number.isRequired,\r\n};\r\nFilterBar.defaultProps = {\r\n  numberTasks: 0,\r\n};\r\n\r\nexport default FilterBar;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n* {\r\n    box-sizing: border-box;\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\nhtml {\r\n    font-family: 'Montserrat', sans-serif;\r\n}\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledButton = styled.button`\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 50%;\r\n  border: 2px solid black;\r\n  z-index: 9000;\r\n  position: fixed;\r\n  bottom: 35px;\r\n  right: 25px;\r\n\r\n  :hover {\r\n    border: 2px solid #494430;\r\n    cursor: pointer;\r\n  }\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst PlusIcon = styled.i`\r\n  font-size: 30px;\r\n`;\r\n\r\nconst ButtonIcon = ({ taskFormVisibleToggle }) => {\r\n  return (\r\n    <StyledButton onClick={taskFormVisibleToggle}>\r\n      <PlusIcon className=\"fas fa-plus\"></PlusIcon>\r\n    </StyledButton>\r\n  );\r\n};\r\nButtonIcon.propTypes = {\r\n  taskFormVisibleToggle: PropTypes.func,\r\n};\r\nexport default ButtonIcon;\r\n","import styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n  width: 200px;\r\n  height: 30px;\r\n  font-size: 20px;\r\n  border: 2px solid #494430;\r\n`;\r\n\r\nexport default Input;\r\n","import styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  width: 100px;\r\n  height: 50px;\r\n`;\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport Input from \"components/Input\";\r\nimport Button from \"components/Button\";\r\n\r\nconst FormWrapper = styled.form`\r\n  position: fixed;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  right: 0;\r\n  top: 0;\r\n  background-color: #fff;\r\n  z-index: 100;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  transform: translate(${({ isVisible }) => (isVisible ? \"0\" : \"100%\")});\r\n  transition: transform 0.5s ease;\r\n\r\n  @media (min-width: 1200px) {\r\n    width: 30vw;\r\n  }\r\n`;\r\n\r\nconst Header = styled.h1`\r\n  font-size: 35px;\r\n  text-align: center;\r\n  padding: 25px;\r\n`;\r\n\r\nconst SelectPriority = styled.select`\r\n  border: 2px solid #494430;\r\n  cursor: pointer;\r\n  width: 200px;\r\n  font-size: 20px;\r\n  margin: 20px;\r\n`;\r\n\r\nconst AddButton = styled(Button)`\r\n  font-size: 20px;\r\n  padding: 10px;\r\n  width: 150px;\r\n\r\n  :hover {\r\n    border: 2px solid black;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst AddTaskForm = ({\r\n  isVisible,\r\n  setIsAddTaskFormVisible,\r\n  tasks,\r\n  setTasks,\r\n  setPriority,\r\n  priority,\r\n}) => {\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  const handleInputText = e => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const handleSubmitForm = e => {\r\n    e.preventDefault();\r\n    if (inputText.length > 1) {\r\n      const newTask = {\r\n        title: inputText,\r\n        done: false,\r\n        priority: priority,\r\n        id: Math.random() * 100,\r\n      };\r\n      setTasks([...tasks, newTask]);\r\n      setInputText(\"\");\r\n      setPriority(\"Low\");\r\n      setIsAddTaskFormVisible(false);\r\n    }\r\n  };\r\n\r\n  const handleSelectPriority = e => {\r\n    setPriority(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormWrapper isVisible={isVisible} onSubmit={handleSubmitForm}>\r\n      <Header>Add new Task</Header>\r\n      <Input placeholder=\"Title\" onChange={handleInputText} value={inputText} />\r\n      <SelectPriority\r\n        name=\"priority\"\r\n        value={priority}\r\n        onChange={handleSelectPriority}\r\n      >\r\n        <option value=\"Low\">Low</option>\r\n        <option value=\"Medium\">Medium</option>\r\n        <option value=\"High\">High</option>\r\n      </SelectPriority>\r\n      <AddButton>Add Note</AddButton>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nAddTaskForm.propTypes = {\r\n  isVisible: PropTypes.bool.isRequired,\r\n  tasks: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  priority: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default AddTaskForm;\r\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"components/Header\";\nimport TasksList from \"components/TasksList\";\nimport FilterBar from \"components/FilterBar\";\nimport GlobalStyles from \"theme/GlobalStyles\";\nimport ButtonIcon from \"components/ButtonIcon\";\nimport AddTaskForm from \"components/AddTaskForm\";\nimport Paragraph from \"components/Paragraph\";\n\nconst Wrapper = styled.div`\n  min-height: 100vh;\n  padding: 6px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nconst Text = styled(Paragraph)`\n  text-align: center;\n  font-size: 24px;\n  margin-top: 20px;\n`;\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const [isAddTaskFormVisible, setIsAddTaskFormVisible] = useState(false);\n  const [priority, setPriority] = useState(\"Low\");\n  const [numberRows, setNumberRows] = useState(5);\n  const [startNumberRows, setStartNumberRows] = useState(0);\n  const [endNumberRows, setEndNumberRows] = useState(5);\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"tasks\");\n    if (data) {\n      setTasks(JSON.parse(data));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  });\n\n  const handleTaskFormVisibleToggle = () => {\n    setIsAddTaskFormVisible(!isAddTaskFormVisible);\n  };\n\n  const changeTaskStatus = id => {\n    let tasksList = [...tasks];\n    const index = tasksList.findIndex(task => task.id === id);\n    tasksList[index].done = !tasksList[index].done;\n    setTasks(tasksList);\n  };\n\n  const handleDeleteTask = id => {\n    let tasksList = [...tasks];\n    tasksList = tasksList.filter(task => task.id !== id);\n    setTasks(tasksList);\n  };\n\n  return (\n    <>\n      <GlobalStyles />\n      <Wrapper>\n        <Header />\n        {tasks.length === 0 ? (\n          <Text>Add new task by clicking button at the bottom</Text>\n        ) : (\n          <>\n            {\" \"}\n            <TasksList\n              tasks={tasks}\n              changeTaskStatus={changeTaskStatus}\n              numberRows={numberRows}\n              handleDeleteTask={handleDeleteTask}\n              startNumberRows={startNumberRows}\n              endNumberRows={endNumberRows}\n            />\n            <FilterBar\n              numberRows={numberRows}\n              setNumberRows={setNumberRows}\n              numberTasks={tasks.length}\n              startNumberRows={startNumberRows}\n              endNumberRows={endNumberRows}\n              setEndNumberRows={setEndNumberRows}\n              setStartNumberRows={setStartNumberRows}\n            />\n          </>\n        )}\n\n        <ButtonIcon taskFormVisibleToggle={handleTaskFormVisibleToggle} />\n      </Wrapper>\n\n      <AddTaskForm\n        isVisible={isAddTaskFormVisible}\n        setIsAddTaskFormVisible={setIsAddTaskFormVisible}\n        tasks={tasks}\n        setTasks={setTasks}\n        priority={priority}\n        setPriority={setPriority}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"views/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}